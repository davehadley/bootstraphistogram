name: ci

on: 
  push:
    branches: [dev]
  pull_request:
    branches: [dev]

jobs:

  build-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ '3.6', '3.7', '3.8', '3.9', '3.10', '3.11', ]
    
    steps:
      - uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '${{ matrix.python-version }}'
      - name: Setup Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python - --version 1.1.15
      - name: Cache Poetry
        uses: actions/cache@v3
        env:
          cache-name: cache-poetry
        with:
          path: ~/.cache/pypoetry/
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.python-version }}-${{ hashFiles('**/pyproject.toml') }}
      - name: Install Dependencies
        run: export PATH=$HOME/.local/bin:${PATH} && poetry install
      - name: pytest
        run: export PATH=$HOME/.local/bin:${PATH} && poetry run pytest
      - name: Build
        run: export PATH=$HOME/.local/bin:${PATH} && poetry build
      - name: Publish (dry-run)
        run: export PATH=$HOME/.local/bin:${PATH} && poetry publish --dry-run --username username --password password
      - name: Run pre-commit checks
        run: |
            export PATH=$HOME/.local/bin:${PATH} && \
            poetry run pre-commit install && \
            poetry run pre-commit run --all-files
      - name: Build docs
        run: pip install . && pip install -r docs/requirements.txt && sphinx-build -W docs docs-build